{"version":3,"file":"static/js/819.25483e38.chunk.js","mappings":"qPA0GA,MA/FA,WACEA,EAAAA,WAAgB,WACdC,SAASC,MAAK,4EAChB,GAAG,KACHC,EAAAA,EAAAA,YAAU,WACRC,IAAAA,OACAA,IAAAA,SACF,GAAG,IACH,OAIIC,EAAAA,EAAAA,MAHFC,EAAQ,EAARA,SACAC,EAAY,EAAZA,aACaC,EAAM,EAAnBC,UAAaD,OAuBf,OACE,gBAAKE,UAAU,UAAS,UACtB,gBAAKA,UAAU,kBAAiB,UAC9B,gBAAKA,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,UAAU,WAAS,UAAU,oBAAkB,OAAM,WAClE,wBAAI,gFAEJ,iBAAKA,UAAU,cAAa,WAC1B,kBAAMC,SAAUJ,GA5BR,SAACK,GACnBC,QAAQC,IAAIF,GACZG,EAAAA,EAAAA,KAAW,0CAA2C,CAC9CC,SAAUJ,EAAKI,SACfC,SAAUL,EAAKK,WAElBC,MAAK,SAAUC,GACZN,QAAQC,IAAIK,GAEKJ,EAAAA,EAAAA,OAAa,CAC1BK,QAAS,6BACTC,QAAS,IACTC,QAAS,CAAC,cAAiBH,EAASP,KAAKW,aAEjD,IACCC,OAAM,SAAUC,GACbZ,QAAQC,IAAIW,EAChB,GACJ,IAUoD,WACxC,iBAAKf,UAAU,aAAY,WACzB,uBAAG,8DACH,0BACEgB,KAAK,QACDpB,EAAS,WAAY,CAAEqB,UAAU,MAEtCnB,EAAOoB,QACN,0BAAM,6IAGV,iBAAKlB,UAAU,gBAAe,WAC5B,uBAAG,0CACH,0BACEgB,KAAK,YACDpB,EACF,WAEA,CAAEqB,UAAU,MAGfnB,EAAOQ,WAAY,0BAAM,+HAE5B,iBAAKN,UAAU,cAAa,WAC1B,cAAGmB,KAAK,IAAG,UACT,gBAAKC,I,ypDAAiBC,IAAI,mBAE5B,cAAGF,KAAK,IAAG,UACT,gBAAKC,I,y9CAAaC,IAAI,kBAI1B,gBAAKrB,UAAU,gBAAe,UAC5B,kBACEA,UAAU,gBACVgB,KAAK,SACLM,MAAM,yCAIZ,gBAAKtB,UAAU,oBAAmB,UAChC,SAAC,KAAO,CAACuB,GAAG,QAAO,UACjB,uBAAG,wIASrB,C","sources":["pages/login-auth-page/login.jsx"],"sourcesContent":["import AOS from \"aos\";\nimport \"aos/dist/aos.css\";\nimport React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./login-auth.css\";\nimport axios from 'axios';\n\nimport googleIcon from \"../../assets/icons/google-icon.png\";\nimport vkIcon from \"../../assets/icons/vk-icon.png\";\n\nfunction LoginPage() {\n  React.useEffect(() => {\n    document.title = `Вход в аккаунт`;\n  }, []);\n  useEffect(() => {\n    AOS.init();\n    AOS.refresh();\n  }, []);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const onAuthorize = (data) => {\n    console.log(data); // Получаем с апи токен для логина, но я не понял как сохранить его в headers, если вы знаете то оно в response!\n    axios.post('http://127.0.0.1:8000/auth/token/login/', {\n            password: data.password,\n            username: data.username,\n        })\n        .then(function (response) {\n            console.log(response) // так вроде небезопастно делать, поэтому я это перепишу, но если хотите то напишите сами\n                                  // нужно просто сохранить токен, чтобы можно было использовать в дальнейших запросах\n            const instance = axios.create({\n                baseURL: 'http://127.0.0.1:8000/api/',\n                timeout: 1000,\n                headers: {'Authorization': response.data.auth_token}\n              });\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    };\n\n  return (\n    <div className=\"profile\">\n      <div className=\"profile_wrapper\">\n        <div className=\"autorizing_page\">\n          <div className=\"sign_in\" data-aos=\"fade-up\" data-aos-duration=\"1000\">\n            <h2>Вход в аккаунт</h2>\n\n            <div className=\"signin_form\">\n              <form onSubmit={handleSubmit(onAuthorize)}>\n                <div className=\"email_sign\">\n                  <p>E-mail или логин</p>\n                  <input\n                    type=\"text\" // было так - type='email' и ...register(\"email\"), поменял потому что на сайте написано e-mail или логин, но можно было вводить только login\n                    {...register(\"username\", { required: true })}\n                  />\n                  {errors.email && (\n                    <span>* E-mail или логин объязательны!</span>\n                  )}\n                </div>\n                <div className=\"password_sign\">\n                  <p>Пароль</p>\n                  <input\n                    type=\"password\"\n                    {...register(\n                      \"password\",\n\n                      { required: true }\n                    )}\n                  />\n                  {errors.password && <span>* Пароль объязательный!</span>}\n                </div>\n                <div className=\"login_links\">\n                  <a href=\"#\">\n                    <img src={googleIcon} alt=\"google icon\" />\n                  </a>\n                  <a href=\"#\">\n                    <img src={vkIcon} alt=\"vk icon\" />\n                  </a>\n                </div>\n\n                <div className=\"signin_button\">\n                  <input\n                    className=\"submit_button\"\n                    type=\"submit\"\n                    value=\"ВОЙТИ\"\n                  />\n                </div>\n              </form>\n              <div className=\"password_recovery\">\n                <NavLink to=\"/auth\">\n                  <p>Создать новый аккаунт</p>\n                </NavLink>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LoginPage;\n"],"names":["React","document","title","useEffect","AOS","useForm","register","handleSubmit","errors","formState","className","onSubmit","data","console","log","axios","password","username","then","response","baseURL","timeout","headers","auth_token","catch","error","type","required","email","href","src","alt","value","to"],"sourceRoot":""}